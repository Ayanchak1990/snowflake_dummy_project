-- USE DEDICATED WAREHOUSE FOR COMPUTE PURPOSES

USE WAREHOUSE CONVEX_INSURANCE;

-- CREATE TABLES FOR DATA VAULT 2.0 WHICH WILL SUPPORT FUTURE ENHANCEMENT OF DATASET

USE "CONVEX_INSURANCE"."CONVEX_VAULT";

-- HUB CUSTOMER

CREATE OR REPLACE TABLE HUB_CUSTOMER (
  HASH_CUSTOMER_ID VARCHAR,
  CUSTOMER_ID VARCHAR,
  LOAD_DTS DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_HUB_CUSTOMER PRIMARY KEY(HASH_CUSTOMER_ID)
);


-- SATELLITE CUSTOMER

CREATE OR REPLACE TABLE SAT_CUSTOMER (
  HASH_CUSTOMER_ID VARCHAR,
  LOYALTY_SCORE INTEGER,
  LOAD_DTS DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_SAT_CUATOMER PRIMARY KEY(HASH_CUSTOMER_ID, LOAD_DTS),
  CONSTRAINT FK_SAT_CUSTOMER FOREIGN KEY(HASH_CUSTOMER_ID) REFERENCES HUB_CUSTOMER
);

-- HUB PRODUCT

CREATE OR REPLACE TABLE HUB_PRODUCT (
  HASH_PRODUCT_ID VARCHAR,
  PRODUCT_ID VARCHAR,
  LOAD_DTS DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_HUB_PRODUCT PRIMARY KEY(HASH_PRODUCT_ID)
);

-- SATELLITE PRODUCT

CREATE OR REPLACE TABLE SAT_PRODUCT (
  HASH_PRODUCT_ID VARCHAR,
  PRODUCT_DESCRIPTION VARCHAR,
  PRODUCT_CATEGORY VARCHAR,
  LOAD_DTS DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_SAT_PRODUCT PRIMARY KEY(HASH_PRODUCT_ID, LOAD_DTS),
  CONSTRAINT FK_SAT_PRODUCT FOREIGN KEY(HASH_PRODUCT_ID) REFERENCES HUB_PRODUCT
);

-- LINK TRANSACTION

CREATE OR REPLACE TABLE LINK_TRANSACTION(
  HASH_LINK_TRANSACTION_ID VARCHAR,
  HASH_CUSTOMER_ID VARCHAR,
  HASH_PRODUCT_ID VARCHAR,
  LOAD_DTS DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_LINK_TRANSACTION  PRIMARY KEY(HASH_LINK_TRANSACTION_ID),
  CONSTRAINT FK_LINK_CUSTOMER_TRANSACTION FOREIGN KEY(HASH_CUSTOMER_ID) REFERENCES HUB_PRODUCT,
  CONSTRAINT FK_LINK_PRODUCT_TRANSACTION FOREIGN KEY(HASH_PRODUCT_ID)    REFERENCES HUB_PRODUCT
);

-- SAT TRANSACTION 

CREATE OR REPLACE TABLE SAT_TRANSACTION(
  HASH_LINK_TRANSACTION_ID VARCHAR,
  PRICE INTEGER,
  TRANSACTION_DATE DATETIME,
  REC_SOURCE VARCHAR,
  CONSTRAINT PK_TRANSACTION PRIMARY KEY(HASH_LINK_TRANSACTION_ID, TRANSACTION_DATE),
  CONSTRAINT FK_TRANSACTION FOREIGN KEY(HASH_LINK_TRANSACTION_ID) REFERENCES LINK_TRANSACTION
);

USE "CONVEX_INSURANCE"."CONVEX_VAULT"

-- LOAD DATA INTO DATA VAULT USING MULTIPLE TABLE INSERT(MTI)

-- LOAD CUSTOMER HUB AND CUSTOMER SATELLITE

CREATE OR REPLACE TASK customer_strm_tsk
  WAREHOUSE = CONVEX_INSURANCE
  SCHEDULE = '1 minute'
WHEN
  SYSTEM$STREAM_HAS_DATA('CONVEX_STAGE.STG_CONVEX_CUSTOMER_STRM')
AS 
INSERT ALL
WHEN (SELECT COUNT(1) FROM HUB_CUSTOMER tgt WHERE tgt.HASH_CUSTOMER_ID = HASH_CUSTOMER_ID) = 0
THEN INTO HUB_CUSTOMER  
( HASH_CUSTOMER_ID
, CUSTOMER_ID
, LOAD_DTS
, REC_SOURCE
)  
VALUES 
( HASH_CUSTOMER_ID
, CUSTOMER_ID
, current_timestamp(2)
, 'CSV'
)  
WHEN (SELECT COUNT(1) FROM SAT_CUSTOMER tgt WHERE tgt.HASH_CUSTOMER_ID = HASH_CUSTOMER_ID ) = 0
THEN INTO sat_customer  
(
  HASH_CUSTOMER_ID  
, LOYALTY_SCORE              
, LOAD_DTS            
, REC_SOURCE                      
)  
VALUES 
(
  HASH_CUSTOMER_ID  
, LOYALTY_SCORE              
, current_timestamp(2)            
, 'CSV'                     
)
SELECT HASH_CUSTOMER_ID
     , CUSTOMER_ID
     , LOYALTY_SCORE
  FROM CONVEX_STAGE.STG_CONVEX_CUSTOMER_STRM src
;

ALTER TASK customer_strm_tsk RESUME; 

-- LOAD PRODUCT HUB AND PRODUCT SATELLITE

CREATE OR REPLACE TASK product_strm_tsk
  WAREHOUSE = CONVEX_INSURANCE
  SCHEDULE = '1 minute'
WHEN
  SYSTEM$STREAM_HAS_DATA('CONVEX_STAGE.STG_CONVEX_PRODUCT_STRM')
AS 
INSERT ALL
WHEN (SELECT COUNT(1) FROM HUB_PRODUCT tgt WHERE tgt.HASH_PRODUCT_ID = HASH_PRODUCT_ID) = 0
THEN INTO HUB_PRODUCT  
( HASH_PRODUCT_ID
, PRODUCT_ID
, LOAD_DTS
, REC_SOURCE
)  
VALUES 
( HASH_PRODUCT_ID
, PRODUCT_ID
, current_timestamp(2)
, 'CSV'
)  
WHEN (SELECT COUNT(1) FROM SAT_PRODUCT tgt WHERE tgt.HASH_PRODUCT_ID = HASH_PRODUCT_ID ) = 0
THEN INTO SAT_PRODUCT  
(
  HASH_PRODUCT_ID  
, PRODUCT_DESCRIPTION
, PRODUCT_CATEGORY             
, LOAD_DTS            
, REC_SOURCE                      
)  
VALUES 
(
  HASH_PRODUCT_ID  
, PRODUCT_DESCRIPTION
, PRODUCT_CATEGORY
, current_timestamp(2)            
, 'CSV'                     
)
SELECT HASH_PRODUCT_ID
     , PRODUCT_ID
     , PRODUCT_DESCRIPTION
     , PRODUCT_CATEGORY
  FROM CONVEX_STAGE.STG_CONVEX_PRODUCT_STRM src
;

ALTER TASK product_strm_tsk RESUME; 

-- LOAD TRANSACTION LINK AND TRANSACTION SATELLITE

CREATE OR REPLACE TASK transaction_strm_tsk
  WAREHOUSE = CONVEX_INSURANCE
  SCHEDULE = '1 minute'
WHEN
  SYSTEM$STREAM_HAS_DATA('CONVEX_STAGE.STG_CONVEX_TRANSACTION_STRM')
AS 
INSERT ALL
WHEN (SELECT COUNT(1) FROM LINK_TRANSACTION tgt WHERE tgt.HASH_LINK_TRANSACTION_ID = HASH_LINK_TRANSACTION_ID) = 0
THEN INTO LINK_TRANSACTION  
( HASH_LINK_TRANSACTION_ID
, HASH_CUSTOMER_ID
, HASH_PRODUCT_ID
, LOAD_DTS
, REC_SOURCE
)  
VALUES 
( HASH_LINK_TRANSACTION_ID
, MD5(CUSTOMER_ID)
, MD5(PRODUCT_ID)
, current_timestamp(2)
, 'JSON'
)  
WHEN (SELECT COUNT(1) FROM SAT_TRANSACTION tgt WHERE tgt.HASH_LINK_TRANSACTION_ID = HASH_LINK_TRANSACTION_ID ) = 0
THEN INTO SAT_TRANSACTION  
(
  HASH_LINK_TRANSACTION_ID  
, PRICE
, TRANSACTION_DATE                       
, REC_SOURCE                      
)  
VALUES 
(
  HASH_LINK_TRANSACTION_ID  
, PRICE
, DATE_OF_PURCHARE    
, 'CSV'                     
)
SELECT HASH_LINK_TRANSACTION_ID
     , CUSTOMER_ID
     , DATE_OF_PURCHARE
     , PRODUCT_ID
     , PRICE
  FROM CONVEX_STAGE.STG_CONVEX_TRANSACTION_STRM src
;

ALTER TASK transaction_strm_tsk RESUME; 
